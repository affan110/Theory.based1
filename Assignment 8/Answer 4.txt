Q.4 Whats component? Types of component

A component is a reusable and independent building block in React that encapsulates a specific piece of functionality and user interface. Components are the fundamental units of a React application, representing a modular and self-contained part of the user interface.

There are two main types of components in React:

Functional Components: Functional components are also known as stateless components or presentational components. They are defined as JavaScript functions that accept props (short for properties) as input and return JSX (JavaScript XML) to describe the UI. Functional components are simpler, easier to read, and encourage a more functional programming style.

Class Components: Class components are also referred to as stateful components or container components. They are defined as JavaScript classes that extend the React.Component class and have additional features such as lifecycle methods and the ability to manage state. Class components were the primary way of creating components in earlier versions of React and are still used in many codebases.

In addition to these main types, React also provides other specialized types of components:

Pure Components: Pure components are a performance optimization in React. They are similar to functional components but come with built-in shallow prop and state comparison. This allows them to avoid unnecessary re-renders when the component's props and state haven't changed.

Higher-Order Components (HOCs): HOCs are functions that take a component as input and return an enhanced version of that component. They are used for code reuse and sharing common functionality among different components. HOCs allow you to add additional props or modify the behavior of the wrapped component.

React Hooks: React Hooks are a feature introduced in React 16.8 that allows functional components to use state and other React features previously available only in class components. Hooks provide a more concise and flexible way to manage state and lifecycle in functional components.

